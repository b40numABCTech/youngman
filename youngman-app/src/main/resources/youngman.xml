<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd">
    <bean name="fetchGitJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean" >
        <property name="jobClass" value="no.api.youngman.quartz.FetchGitJob" />
        <!--property name="jobDataAsMap">
            <map>
                <entry key="purgingContentTask" value-ref="purgingContentTask" />
            </map>
        </property-->
        <property name="durability" value="true" />
    </bean>

    <bean id="fetchGitTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="fetchGitJob" />
        <property name="cronExpression" value="0 0 0 * * ?" />
        <property name="startDelay" value="1000" />

    </bean>

    <bean id="properties" class="no.api.youngman.properties.CoreProperties" />

    <bean id="youngmanQuartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="quartzProperties">
            <props>
                <prop key="org.quartz.scheduler.instanceName">youngmanQuartzScheduler</prop>
                <prop key="org.quartz.scheduler.instanceId">AUTO</prop>
                <prop key="org.quartz.scheduler.rmi.export">false</prop>
                <prop key="org.quartz.scheduler.rmi.proxy">false</prop>
                <prop key="org.quartz.scheduler.wrapJobExecutionInUserTransaction">false</prop>
                <prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
                <prop key="org.quartz.threadPool.threadCount">1</prop>
                <prop key="org.quartz.threadPool.threadPriority">5</prop>
                <prop key="org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread">true</prop>
                <prop key="org.quartz.jobStore.class">org.quartz.simpl.RAMJobStore</prop>
            </props>
        </property>
        <property name="overwriteExistingJobs" value="true" />
        <property name="waitForJobsToCompleteOnShutdown" value="true" />
        <property name="startupDelay" value="10" />
    </bean>

    <bean id="peopleDAO" class="no.api.youngman.dao.jdbc.PeopleDAOImpl"/>
    <bean id="projectDAO" class="no.api.youngman.dao.jdbc.ProjectDAOImpl"/>
    <bean id="collaboratorDAO" class="no.api.youngman.dao.jdbc.CollaboratorDAOImpl"/>
</beans>