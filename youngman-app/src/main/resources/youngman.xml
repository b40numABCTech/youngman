<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <bean id="youngmanDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/youngman" />
        <property name="username" value="youngman" />
        <property name="password" value="pingu123" />
    </bean>

    <bean id="liquibase" class="liquibase.integration.spring.SpringLiquibase">
        <property name="dataSource" ref="youngmanDataSource"/>
        <property name="changeLog" value="classpath:liquibase/youngman.db.changelog.xml"/>
    </bean>

    <bean id="fetchGitJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean" >
        <property name="jobClass" value="no.api.youngman.quartz.FetchGitJob" />
        <!--<property name="jobDataAsMap">-->
            <!--<map>-->
                <!--<entry key="graphService" value-ref="graphService" />-->
                <!--<entry key="gitRestClient" value-ref="gitRestClient" />-->
                <!--<entry key="projectDAO" value-ref="projectDAO" />-->
                <!--<entry key="peopleDAO" value-ref="peopleDAO" />-->
                <!--<entry key="collaboratorDAO" value-ref="contributorDAO" />-->
            <!--</map>-->
        <!--</property>-->
        <property name="durability" value="true" />
    </bean>

    <bean id="fetchGitTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="fetchGitJob" />
        <property name="cronExpression" value="0 0 0 * * ?" />
        <property name="startDelay" value="1000" />

    </bean>

    <bean id="peopleDAO" class="no.api.youngman.dao.jdbc.PeopleDAOImpl">
        <property name="dataSource" ref="youngmanDataSource"/>
    </bean>
    <bean id="projectDAO" class="no.api.youngman.dao.jdbc.ProjectDAOImpl">
        <property name="dataSource" ref="youngmanDataSource" />
    </bean>
    <bean id="contributorDAO" class="no.api.youngman.dao.jdbc.ContributorDAOImpl">
        <property name="dataSource" ref="youngmanDataSource" />
    </bean>

    <bean id="properties" class="no.api.youngman.properties.CoreProperties" />
    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <property name="requestFactory">
            <bean class="org.springframework.http.client.HttpComponentsClientHttpRequestFactory" />
        </property>
    </bean>
    <bean id="gitRestClient" class="no.api.youngman.client.git.GitRestClient" >
        <property name="restClient" ref="restTemplate"/>
        <property name="properties" ref="properties" />
    </bean>

    <bean id="graphService" class="no.api.youngman.neo4j.GraphService">
        <constructor-arg name="uri" value="#{properties.neo4jUrl}"/>
    </bean>
    <bean id="youngmanQuartzScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
    <property name="quartzProperties">
        <props>
            <prop key="org.quartz.scheduler.instanceName">youngmanQuartzScheduler</prop>
            <prop key="org.quartz.scheduler.instanceId">AUTO</prop>
            <prop key="org.quartz.scheduler.rmi.export">false</prop>
            <prop key="org.quartz.scheduler.rmi.proxy">false</prop>
            <prop key="org.quartz.scheduler.wrapJobExecutionInUserTransaction">false</prop>
            <prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
            <prop key="org.quartz.threadPool.threadCount">1</prop>
            <prop key="org.quartz.threadPool.threadPriority">5</prop>
            <prop key="org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread">true</prop>
            <prop key="org.quartz.jobStore.class">org.quartz.simpl.RAMJobStore</prop>
        </props>
    </property>
    <property name="overwriteExistingJobs" value="true" />
    <property name="waitForJobsToCompleteOnShutdown" value="true" />
    <property name="startupDelay" value="10" />
    <property name="triggers">
        <list>
            <ref bean="fetchGitTrigger" />
        </list>
    </property>
    <property name="schedulerContextAsMap">
        <map>
            <entry key="graphService" value-ref="graphService" />
            <entry key="gitRestClient" value-ref="gitRestClient" />
            <entry key="projectDAO" value-ref="projectDAO" />
            <entry key="peopleDAO" value-ref="peopleDAO" />
            <entry key="collaboratorDAO" value-ref="contributorDAO" />
        </map>
    </property>
</bean>


</beans>